<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <springProperty scope="context" name="project_name" source="spring.application.name"/>
    <!-- property标签用来定义变量值-->
    <!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义后，可以使“${}”来使用变量 -->
    <property name="log.path" value="e:/logs"/>
    <!-- 正在记录的日志文档的路径及文档名 -->
    <!--    日志输出的格式-->
    <property name="CONSOLE_LOG_PATTERN" value="${project_name} >>> %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg %n"/>

    <!--    在控制台输出日志-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <!--日志写入磁盘-->
    <!-- level为 INFO 日志，时间滚动输出  -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文档的路径及文档名 -->
        <file>${log.path}/mybatis-plug.log</file>
        <!--日志文档输出格式-->
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${log.path}/mybatis-plug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文档保留天数-->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <!-- 此日志文档只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--
    设定最低需要输出的日志输出级别。如果将标签root中的属性level设为info，那么低于info级别的日志将不会输出
    日志级别由低到高分别为：console >> debug >> info >> warn >> error
    -->
    <root level="info">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="INFO_FILE" />
    </root>

</configuration>
